/**
 *
 * Copyright (c) 2009-2014 Freedomotic team http://freedomotic.com
 *
 * This file is part of Freedomotic
 *
 * This Program is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation; either version 2, or (at your option) any later version.
 *
 * This Program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * Freedomotic; see the file COPYING. If not, see
 * <http://www.gnu.org/licenses/>.
 */
package com.freedomotic.plugins.devices.knx;

import com.freedomotic.plugins.devices.knx.Discover.ShutdownHandler;
import java.io.File;
import java.util.Collection;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import tuwien.auto.calimero.datapoint.Datapoint;
import tuwien.auto.calimero.datapoint.DatapointMap;
import tuwien.auto.calimero.exception.KNXException;

/**
 *
 * @author Mauro Cicolella <mcicolella@libero.it>
 */
public class KnxFrame extends javax.swing.JFrame {

    Knx4Fd pluginReference;

    /**
     * Creates new form KnxGui
     */
    public KnxFrame(Knx4Fd pluginReference) {
        this.pluginReference = pluginReference;

        initComponents();
    }

    public void writeDatapointTextArea(String data) {
        String oldData = jTextAreaDatapoints.getText();
        jTextAreaDatapoints.setText(oldData + "\n" + data);
    }

    public void writeDiscoverTextArea(String data) {
        String oldData = jTextAreaDiscover.getText();
        jTextAreaDiscover.setText(oldData + "\n" + data);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDiscover = new javax.swing.JTextArea();
        jButtonDiscover = new javax.swing.JButton();
        jTextFieldPort = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButtonDatapointsImport = new javax.swing.JButton();
        jButtonSelectDatapointFile = new javax.swing.JButton();
        jTextFieldDatapointsFile = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaDatapoints = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextAreaDiscover.setColumns(20);
        jTextAreaDiscover.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDiscover);

        jButtonDiscover.setText("Discover");
        jButtonDiscover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDiscoverActionPerformed(evt);
            }
        });

        jTextFieldPort.setText("3671");

        jLabel2.setText("Port");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jButtonDiscover)
                        .addGap(0, 172, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDiscover))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Discover", jPanel1);

        jButtonDatapointsImport.setText("Import");
        jButtonDatapointsImport.setEnabled(false);
        jButtonDatapointsImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDatapointsImportActionPerformed(evt);
            }
        });

        jButtonSelectDatapointFile.setText("Select file");
        jButtonSelectDatapointFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelectDatapointFileActionPerformed(evt);
            }
        });

        jTextFieldDatapointsFile.setText("no datapoints file selected");

        jTextAreaDatapoints.setColumns(20);
        jTextAreaDatapoints.setRows(5);
        jScrollPane2.setViewportView(jTextAreaDatapoints);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextFieldDatapointsFile, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonSelectDatapointFile)
                        .addGap(26, 26, 26)
                        .addComponent(jButtonDatapointsImport))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDatapointsFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSelectDatapointFile)
                    .addComponent(jButtonDatapointsImport))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Import datapoints", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSelectDatapointFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelectDatapointFileActionPerformed
        JFileChooser jfc;
        jfc = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("Datapoints File", "xml");
        jfc.setFileFilter(filter);
        File f = new File(System.getProperty("user.dir"));
        jfc.setCurrentDirectory(f);
        jfc.showOpenDialog(this);
        File selFile = jfc.getSelectedFile();
        jTextFieldDatapointsFile.setText(selFile.getAbsolutePath());
        jButtonDatapointsImport.setEnabled(true);
    }//GEN-LAST:event_jButtonSelectDatapointFileActionPerformed

    private void jButtonDatapointsImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDatapointsImportActionPerformed
        pluginReference.datapointMap = pluginReference.LoadDatapoints(jTextFieldDatapointsFile.getText());
        pluginReference.initialization(pluginReference.datapointMap);
    }//GEN-LAST:event_jButtonDatapointsImportActionPerformed

    private void jButtonDiscoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDiscoverActionPerformed
        try {
            String[] args = {"-localport", jTextFieldPort.getText(), "-search"};
            Discover d = new Discover(args, this);
            final Discover.ShutdownHandler sh = d.new ShutdownHandler().register();
            d.run();
            sh.unregister();
        } catch (KNXException ex) {
            Logger.getLogger(KnxFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonDiscoverActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDatapointsImport;
    private javax.swing.JButton jButtonDiscover;
    private javax.swing.JButton jButtonSelectDatapointFile;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea jTextAreaDatapoints;
    private javax.swing.JTextArea jTextAreaDiscover;
    private javax.swing.JTextField jTextFieldDatapointsFile;
    private javax.swing.JTextField jTextFieldPort;
    // End of variables declaration//GEN-END:variables
}
